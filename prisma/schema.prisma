generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Carousel {
  id       Int    @id @default(autoincrement())
  title    String
  imageUrl String
}

model About {
  id        Int      @id @default(autoincrement())
  images    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Statistics {
  id        Int      @id @default(autoincrement())
  number    Int
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Teacher {
  id         Int      @id @default(autoincrement())
  name       String
  experience String
  images     String   @default("https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Leadership {
  id              Int      @id @default(autoincrement())
  fullname        String
  position        String
  phone_number    String
  email           String   @unique
  acceptance_days String
  images          String   @default("https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg") // Default image path
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Application {
  id           Int      @id @default(autoincrement())
  fullname     String
  phone_number String
  message      String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Comment {
  id           Int      @id @default(autoincrement())
  message      String
  fullname     String
  email        String?
  phone_number String?
  createdAt    DateTime @default(now())
  news         News     @relation(fields: [newsId], references: [id], onDelete: Cascade)
  newsId       Int
}

model Gallery {
  id        Int      @id @default(autoincrement())
  images    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model News {
  id          Int       @id @default(autoincrement())
  images      String[]
  title       String
  description String
  createdAt   DateTime  @default(now())
  comments    Comment[]
}

model Admin {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      String?  @default("admin")
  isDeleted Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
